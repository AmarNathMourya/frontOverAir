var app=angular.module("overair",["ui.router","ngCookies","ngStorage"]);app.config(["$stateProvider","$urlRouterProvider","$httpProvider",function(o,e,n){n.interceptors.push("TokenInterceptor"),e.otherwise("/"),o.state("client",{url:"/client",templateUrl:"client.html"}).state("/",{url:"/",controller:"indexController"})}]),app.run(["$rootScope","$location","$state","$window","$cookies",function(o,e,n){o.$on("$stateChangeStart",function(o,e){console.log("to state value is:::",e),null!=e&&"indexController"==e.controller&&(o.preventDefault(),n.go("client"))})}]);var config=config||{};config.development={app:"overAir-Dev",overAir:{url:"http://localhost:5000"}},config.staging={app:"overAir-Dev",overAir:{url:"http://overair.herokuapp.com"}},angular.module("overair").factory("clientApi",["$http","config",function(o,e){var n=e.overAir.url;return{getConnection:function(e){return o.post(n+"/assignconnection",e)},saveUpdtClicks:function(e){return o.post(n+"/updateclicks",e)}}}]),angular.module("overair").factory("TokenInterceptor",["$q","config","$window","$location","$cookies",function(o,e,n,t,r){return{request:function(o){o.headers=o.headers||{};var e=(r.token,r.get("currentCookie")),n=r.get("bconID");return e&&n&&(o.headers.cookies=e,o.headers.bconCookies=n),o},requestError:function(e){return o.reject(e)}}}]),angular.module("overair").factory("config",function(){var o=function(){var o=window.document.URL;return 0===o.indexOf("http://127.0.0.1")||0===o.indexOf("http://localhost")?"development":0===o.indexOf("http://overair-front.herokuapp.com")?"staging":void 0}();if(!o)throw new Error("failed to detect application env");return window.config[o]}),angular.module("overair").factory("socket",["$rootScope","config",function(o,e){var n=e.overAir.url,t=io.connect(n);return{on:function(e,n){function r(){var e=arguments;o.$apply(function(){n.apply(t,e)})}return t.on(e,r),function(){t.removeListener(e,r)}},emit:function(e,n,r){t.emit(e,n,function(){var e=arguments;o.$apply(function(){r&&r.apply(t,e)})})}}}]);var app=angular.module("overair");app.controller("clientController",["$scope","$http","$state","$rootScope","$cookies","config","clientApi","socket",function(o,e,n,t,r,i,c,l){function a(){for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),n="",t=0;10>t;t++){var i=Math.floor(Math.random()*e.length);n+=e[i]}o.custCookie={customCookie:n},r.put("currentCookie",n),c.getConnection(o.custCookie).then(function(o){console.log("response is success",o);r.get("currentCookie");console.log("favoriteCookie is::",r)},function(){console.log("error is::")})}console.log("client controller is called"),r.get("currentCookie")&&r.get("bconID")?(o.showBcon=r.get("bconID"),l.emit("channel2",o.showBcon),console.log("cookie already exist",o.showBcon)):(a(),console.log("no cookie exist")),l.on("connectedUserData",function(e){if(console.log("hello",e),o.setFilterBcon=r.get("bconID"),!o.setFilterBcon){var n=e.pop();r.put("bconID",n.bcon_id),console.log("bconCoki is::",n.bcon_id)}if(o.filterBcon=r.get("bconID"),o.filterGrp1Data=[],o.filterGrp2Data=[],o.assignGroupFlg=!0,o.filterBcon){for(var t in e)e[t].bcon_id===o.filterBcon&&(o.assignGroupFlg?(o.filterGrp1Data.push(e[t]),o.assignGroupFlg=!1):(o.filterGrp2Data.push(e[t]),o.assignGroupFlg=!0));console.log("filter data1 is:::",o.filterGrp1Data),console.log("filter data2 is:::",o.filterGrp2Data)}}),o.updateClicks=function(){o.cokiCondtion=r.get("currentCookie"),o.bconCondtion=r.get("bconID"),o.criteria={updtCookie:o.cokiCondtion,updtBcon:o.bconCondtion},c.saveUpdtClicks(o.criteria).then(function(o){console.log("click updte response is:::",o)},function(){console.log("error in update click counrt")})}}]),angular.module("overair").controller("indexController",["$scope","$http","$state","$cookies","$window","config",function(o,e,n,t,r,i){console.log("checking config vsalue is::",i)}]),angular.module("overair").controller("MainController",["$scope","$state","$rootScope",function(o,e,n){o.$state=e,console.log("main controller state is::",o.$state),n.$on("$stateChangeStart",function(o,e){console.log("to state value is:::",e)})}]);